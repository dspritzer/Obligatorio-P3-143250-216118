//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Presentacion.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTipoServicio", Namespace="http://schemas.datacontract.org/2004/07/ServicesWCF")]
    [System.SerializableAttribute()]
    public partial class DTOTipoServicio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Presentacion.ServiceReference1.DTOTipoEvento[] listaEventosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Presentacion.ServiceReference1.DTOTipoEvento[] listaEventos {
            get {
                return this.listaEventosField;
            }
            set {
                if ((object.ReferenceEquals(this.listaEventosField, value) != true)) {
                    this.listaEventosField = value;
                    this.RaisePropertyChanged("listaEventos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTipoEvento", Namespace="http://schemas.datacontract.org/2004/07/ServicesWCF")]
    [System.SerializableAttribute()]
    public partial class DTOTipoEvento : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOServicio", Namespace="http://schemas.datacontract.org/2004/07/ServicesWCF")]
    [System.SerializableAttribute()]
    public partial class DTOServicio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Presentacion.ServiceReference1.DTOProveedor provField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Presentacion.ServiceReference1.DTOTipoServicio tipoServField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string foto {
            get {
                return this.fotoField;
            }
            set {
                if ((object.ReferenceEquals(this.fotoField, value) != true)) {
                    this.fotoField = value;
                    this.RaisePropertyChanged("foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Presentacion.ServiceReference1.DTOProveedor prov {
            get {
                return this.provField;
            }
            set {
                if ((object.ReferenceEquals(this.provField, value) != true)) {
                    this.provField = value;
                    this.RaisePropertyChanged("prov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Presentacion.ServiceReference1.DTOTipoServicio tipoServ {
            get {
                return this.tipoServField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoServField, value) != true)) {
                    this.tipoServField = value;
                    this.RaisePropertyChanged("tipoServ");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOProveedor", Namespace="http://schemas.datacontract.org/2004/07/ServicesWCF")]
    [System.SerializableAttribute()]
    public partial class DTOProveedor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaIniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RUTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaIni {
            get {
                return this.FechaIniField;
            }
            set {
                if ((this.FechaIniField.Equals(value) != true)) {
                    this.FechaIniField = value;
                    this.RaisePropertyChanged("FechaIni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RUT {
            get {
                return this.RUTField;
            }
            set {
                if ((object.ReferenceEquals(this.RUTField, value) != true)) {
                    this.RUTField = value;
                    this.RaisePropertyChanged("RUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VIP {
            get {
                return this.VIPField;
            }
            set {
                if ((this.VIPField.Equals(value) != true)) {
                    this.VIPField = value;
                    this.RaisePropertyChanged("VIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pass {
            get {
                return this.passField;
            }
            set {
                if ((object.ReferenceEquals(this.passField, value) != true)) {
                    this.passField = value;
                    this.RaisePropertyChanged("pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telefono {
            get {
                return this.telefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.telefonoField, value) != true)) {
                    this.telefonoField = value;
                    this.RaisePropertyChanged("telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceWCFProveedores")]
    public interface IServiceWCFProveedores {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/insertar", ReplyAction="http://tempuri.org/IServiceWCFProveedores/insertarResponse")]
        bool insertar(string rut, string nombre, string mail, string tel, System.DateTime fecha, bool vip, string passw, string nomserv, string descserv, int tiposerv, string fotoserv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/insertar", ReplyAction="http://tempuri.org/IServiceWCFProveedores/insertarResponse")]
        System.Threading.Tasks.Task<bool> insertarAsync(string rut, string nombre, string mail, string tel, System.DateTime fecha, bool vip, string passw, string nomserv, string descserv, int tiposerv, string fotoserv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/listarTiposServ", ReplyAction="http://tempuri.org/IServiceWCFProveedores/listarTiposServResponse")]
        Presentacion.ServiceReference1.DTOTipoServicio[] listarTiposServ();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/listarTiposServ", ReplyAction="http://tempuri.org/IServiceWCFProveedores/listarTiposServResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoServicio[]> listarTiposServAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/listarTiposEvPorServ", ReplyAction="http://tempuri.org/IServiceWCFProveedores/listarTiposEvPorServResponse")]
        Presentacion.ServiceReference1.DTOTipoEvento[] listarTiposEvPorServ(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/listarTiposEvPorServ", ReplyAction="http://tempuri.org/IServiceWCFProveedores/listarTiposEvPorServResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoEvento[]> listarTiposEvPorServAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerServicio", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerServicioResponse")]
        Presentacion.ServiceReference1.DTOServicio leerServicio(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerServicio", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerServicioResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOServicio> leerServicioAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerTipoServicio", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerTipoServicioResponse")]
        Presentacion.ServiceReference1.DTOTipoServicio leerTipoServicio(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerTipoServicio", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerTipoServicioResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoServicio> leerTipoServicioAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerTipoEvento", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerTipoEventoResponse")]
        Presentacion.ServiceReference1.DTOTipoEvento leerTipoEvento(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerTipoEvento", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerTipoEventoResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoEvento> leerTipoEventoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/desactivarProveedor", ReplyAction="http://tempuri.org/IServiceWCFProveedores/desactivarProveedorResponse")]
        bool desactivarProveedor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/desactivarProveedor", ReplyAction="http://tempuri.org/IServiceWCFProveedores/desactivarProveedorResponse")]
        System.Threading.Tasks.Task<bool> desactivarProveedorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/modificarArancel", ReplyAction="http://tempuri.org/IServiceWCFProveedores/modificarArancelResponse")]
        bool modificarArancel(decimal valor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/modificarArancel", ReplyAction="http://tempuri.org/IServiceWCFProveedores/modificarArancelResponse")]
        System.Threading.Tasks.Task<bool> modificarArancelAsync(decimal valor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/modificarPorcentajeVIP", ReplyAction="http://tempuri.org/IServiceWCFProveedores/modificarPorcentajeVIPResponse")]
        bool modificarPorcentajeVIP(decimal porcentaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/modificarPorcentajeVIP", ReplyAction="http://tempuri.org/IServiceWCFProveedores/modificarPorcentajeVIPResponse")]
        System.Threading.Tasks.Task<bool> modificarPorcentajeVIPAsync(decimal porcentaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerProveedor", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerProveedorResponse")]
        Presentacion.ServiceReference1.DTOProveedor leerProveedor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/leerProveedor", ReplyAction="http://tempuri.org/IServiceWCFProveedores/leerProveedorResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOProveedor> leerProveedorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/devolverProveedores", ReplyAction="http://tempuri.org/IServiceWCFProveedores/devolverProveedoresResponse")]
        Presentacion.ServiceReference1.DTOProveedor[] devolverProveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCFProveedores/devolverProveedores", ReplyAction="http://tempuri.org/IServiceWCFProveedores/devolverProveedoresResponse")]
        System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOProveedor[]> devolverProveedoresAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceWCFProveedoresChannel : Presentacion.ServiceReference1.IServiceWCFProveedores, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceWCFProveedoresClient : System.ServiceModel.ClientBase<Presentacion.ServiceReference1.IServiceWCFProveedores>, Presentacion.ServiceReference1.IServiceWCFProveedores {
        
        public ServiceWCFProveedoresClient() {
        }
        
        public ServiceWCFProveedoresClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceWCFProveedoresClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFProveedoresClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFProveedoresClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool insertar(string rut, string nombre, string mail, string tel, System.DateTime fecha, bool vip, string passw, string nomserv, string descserv, int tiposerv, string fotoserv) {
            return base.Channel.insertar(rut, nombre, mail, tel, fecha, vip, passw, nomserv, descserv, tiposerv, fotoserv);
        }
        
        public System.Threading.Tasks.Task<bool> insertarAsync(string rut, string nombre, string mail, string tel, System.DateTime fecha, bool vip, string passw, string nomserv, string descserv, int tiposerv, string fotoserv) {
            return base.Channel.insertarAsync(rut, nombre, mail, tel, fecha, vip, passw, nomserv, descserv, tiposerv, fotoserv);
        }
        
        public Presentacion.ServiceReference1.DTOTipoServicio[] listarTiposServ() {
            return base.Channel.listarTiposServ();
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoServicio[]> listarTiposServAsync() {
            return base.Channel.listarTiposServAsync();
        }
        
        public Presentacion.ServiceReference1.DTOTipoEvento[] listarTiposEvPorServ(int id) {
            return base.Channel.listarTiposEvPorServ(id);
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoEvento[]> listarTiposEvPorServAsync(int id) {
            return base.Channel.listarTiposEvPorServAsync(id);
        }
        
        public Presentacion.ServiceReference1.DTOServicio leerServicio(int id) {
            return base.Channel.leerServicio(id);
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOServicio> leerServicioAsync(int id) {
            return base.Channel.leerServicioAsync(id);
        }
        
        public Presentacion.ServiceReference1.DTOTipoServicio leerTipoServicio(int id) {
            return base.Channel.leerTipoServicio(id);
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoServicio> leerTipoServicioAsync(int id) {
            return base.Channel.leerTipoServicioAsync(id);
        }
        
        public Presentacion.ServiceReference1.DTOTipoEvento leerTipoEvento(int id) {
            return base.Channel.leerTipoEvento(id);
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOTipoEvento> leerTipoEventoAsync(int id) {
            return base.Channel.leerTipoEventoAsync(id);
        }
        
        public bool desactivarProveedor(int id) {
            return base.Channel.desactivarProveedor(id);
        }
        
        public System.Threading.Tasks.Task<bool> desactivarProveedorAsync(int id) {
            return base.Channel.desactivarProveedorAsync(id);
        }
        
        public bool modificarArancel(decimal valor) {
            return base.Channel.modificarArancel(valor);
        }
        
        public System.Threading.Tasks.Task<bool> modificarArancelAsync(decimal valor) {
            return base.Channel.modificarArancelAsync(valor);
        }
        
        public bool modificarPorcentajeVIP(decimal porcentaje) {
            return base.Channel.modificarPorcentajeVIP(porcentaje);
        }
        
        public System.Threading.Tasks.Task<bool> modificarPorcentajeVIPAsync(decimal porcentaje) {
            return base.Channel.modificarPorcentajeVIPAsync(porcentaje);
        }
        
        public Presentacion.ServiceReference1.DTOProveedor leerProveedor(int id) {
            return base.Channel.leerProveedor(id);
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOProveedor> leerProveedorAsync(int id) {
            return base.Channel.leerProveedorAsync(id);
        }
        
        public Presentacion.ServiceReference1.DTOProveedor[] devolverProveedores() {
            return base.Channel.devolverProveedores();
        }
        
        public System.Threading.Tasks.Task<Presentacion.ServiceReference1.DTOProveedor[]> devolverProveedoresAsync() {
            return base.Channel.devolverProveedoresAsync();
        }
    }
}
